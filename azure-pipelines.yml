trigger:
  branches:
    include:
      - main  # Adjust as needed

jobs:
- job: Android_Testing
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - checkout: self
    displayName: 'Checkout Repository'

  - script: |
      echo "Installing the latest Flutter version..."
      git clone https://github.com/flutter/flutter.git --depth 1
      export FLUTTER_HOME=$(pwd)/flutter
      export PATH="$FLUTTER_HOME/bin:$PATH"
      echo "##vso[task.setvariable variable=FLUTTER_HOME]$FLUTTER_HOME"
      echo "##vso[task.setvariable variable=PATH]$FLUTTER_HOME/bin:$PATH"
    displayName: 'Install Latest Flutter Version'

  - script: flutter doctor -v
    displayName: 'Verify Flutter Installation'

  - script: |
      cd $(Build.SourcesDirectory)
      ls -la  # Debugging step to verify files
      flutter pub get
    displayName: 'Install Dependencies'

  - script: flutter analyze
    displayName: 'Run Flutter Analyze'

  - script: flutter test test/ --machine > test-results.json
    displayName: 'Run Widget Tests'

  - script: |
      sudo apt-get update -y
      sudo apt-get install -y libglu1-mesa
    displayName: 'Install Dependencies for Emulator'

  - script: |
      echo "Starting Android Emulator..."
      $ANDROID_HOME/emulator/emulator -avd test_emulator -no-audio -no-window -no-snapshot &
      adb wait-for-device
      adb devices
    displayName: 'Start Android Emulator'

  - script: flutter test integration_test/ --machine > integration-test-results.json
    displayName: 'Run Android Integration Tests'

  - script: |
      dart pub global activate junitreport
      cat test-results.json | tojunit > test-results.xml
      cat integration-test-results.json | tojunit > integration-test-results.xml
    displayName: 'Convert Test Results to JUnit Format'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testResultsFormat: 'JUnit'
      mergeTestResults: true
    displayName: 'Publish Android Test Results'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'test-results.xml'
      artifactName: 'android-test-results'
    displayName: 'Upload Android Test Results Artifact'

- job: iOS_Testing
  pool:
    vmImage: 'macOS-latest'
  dependsOn: Android_Testing

  steps:
  - checkout: self
    displayName: 'Checkout Repository'

  - script: |
      echo "Installing the latest Flutter version..."
      git clone https://github.com/flutter/flutter.git --depth 1
      export FLUTTER_HOME=$(pwd)/flutter
      export PATH="$FLUTTER_HOME/bin:$PATH"
      echo "##vso[task.setvariable variable=FLUTTER_HOME]$FLUTTER_HOME"
      echo "##vso[task.setvariable variable=PATH]$FLUTTER_HOME/bin:$PATH"
    displayName: 'Install Latest Flutter Version'

  - script: flutter doctor -v
    displayName: 'Verify Flutter Installation'

  - script: |
      cd $(Build.SourcesDirectory)
      ls -la  # Debugging step to verify files
      flutter pub get
    displayName: 'Install Dependencies'

  - script: flutter analyze
    displayName: 'Run Flutter Analyze'

  - script: flutter test test/ --machine > test-results.json
    displayName: 'Run Widget Tests'

  - script: |
      echo "Starting iOS Simulator..."
      xcrun simctl boot "iPhone 14"
      xcrun simctl list devices
    displayName: 'Start iOS Simulator'

  - script: flutter test integration_test/ --machine > integration-test-results.json
    displayName: 'Run iOS Integration Tests'

  - script: |
      dart pub global activate junitreport
      cat test-results.json | tojunit > test-results.xml
      cat integration-test-results.json | tojunit > integration-test-results.xml
    displayName: 'Convert Test Results to JUnit Format'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testResultsFormat: 'JUnit'
      mergeTestResults: true
    displayName: 'Publish iOS Test Results'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'test-results.xml'
      artifactName: 'ios-test-results'
    displayName: 'Upload iOS Test Results Artifact'
trigger:
  branches:
    include:
      - main  # Adjust as needed

jobs:
- job: Android_Testing
  pool:
    vmImage: 'ubuntu-latest'  # Linux for Android tests

  steps:
  - script: |
      echo "Installing the latest Flutter version..."
      git clone https://github.com/flutter/flutter.git --depth 1
      echo "##vso[task.setvariable variable=FLUTTER_HOME]$(pwd)/flutter"
      echo "$(pwd)/flutter/bin" >> $GITHUB_PATH
    displayName: 'Install Latest Flutter Version'

  - script: flutter doctor -v
    displayName: 'Verify Flutter Installation'

  - script: flutter pub get
    displayName: 'Install Dependencies'

  - script: flutter analyze
    displayName: 'Run Flutter Analyze'

  - script: flutter test test/
    displayName: 'Run Widget Tests'

  - script: |
      sudo apt-get update -y
      sudo apt-get install -y libglu1-mesa
    displayName: 'Install Dependencies for Emulator'

  - script: |
      echo "Starting Android Emulator..."
      $ANDROID_HOME/emulator/emulator -avd test_emulator -no-audio -no-window -no-snapshot &
      adb wait-for-device
      adb devices
    displayName: 'Start Android Emulator'

  - script: flutter test integration_test/
    displayName: 'Run Android Integration Tests'

- job: iOS_Testing
  pool:
    vmImage: 'macOS-latest'  # macOS required for iOS tests
  dependsOn: Android_Testing  # Run iOS tests only after Android tests

  steps:
  - script: |
      echo "Installing the latest Flutter version..."
      git clone https://github.com/flutter/flutter.git --depth 1
      echo "##vso[task.setvariable variable=FLUTTER_HOME]$(pwd)/flutter"
      echo "$(pwd)/flutter/bin" >> $GITHUB_PATH
    displayName: 'Install Latest Flutter Version'

  - script: flutter doctor -v
    displayName: 'Verify Flutter Installation'

  - script: flutter pub get
    displayName: 'Install Dependencies'

  - script: flutter analyze
    displayName: 'Run Flutter Analyze'

  - script: flutter test test/
    displayName: 'Run Widget Tests'

  - script: |
      echo "Starting iOS Simulator..."
      xcrun simctl boot "iPhone 14"
      xcrun simctl list devices
    displayName: 'Start iOS Simulator'

  - script: flutter test integration_test/
    displayName: 'Run iOS Integration Tests'